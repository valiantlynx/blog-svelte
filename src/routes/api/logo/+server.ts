import type { RequestHandler } from './$types';

export const GET: RequestHandler = async ({ url }) => {
	const width = Number(url.searchParams.get('width')) || 265;
	const height = Number(url.searchParams.get('height')) || 268;
	const color = url.searchParams.get('color') || '#000';

	try {
		// SVG template with placeholders
		const svgTemplate = `
    <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="${width}.000000pt" height="${height}.000000pt" viewBox="0 0 265.000000 268.000000" preserveAspectRatio="xMidYMid meet">
	<g transform="translate(0.000000,268.000000) scale(0.100000,-0.100000)" fill="${color}" stroke="none">
		<path d="M1295 2516 c-6 -8 -32 -26 -60 -41 -27 -15 -90 -51 -140 -80 -49 -29
		-137 -80 -195 -113 -58 -33 -115 -69 -127 -81 l-23 -20 0 -630 c0 -346 3 -636
		6 -644 8 -22 33 -12 158 61 61 35 158 92 216 125 58 33 113 67 123 75 16 14
		17 46 17 399 0 272 3 383 11 383 12 0 162 -84 384 -214 193 -114 214 -124 225
		-106 6 8 10 134 10 281 0 240 -2 269 -17 287 -15 17 -142 94 -320 193 -88 49
		-208 123 -211 131 -6 13 -46 9 -57 -6z" />
				<path d="M1380 1472 c0 -207 3 -282 13 -295 6 -9 66 -47 132 -85 66 -38 181
		-104 255 -147 74 -44 158 -91 186 -107 28 -15 58 -36 68 -46 16 -19 14 -21
		-51 -60 -37 -22 -90 -52 -118 -67 -27 -16 -66 -38 -85 -50 -19 -12 -57 -34
		-85 -50 -117 -64 -235 -137 -235 -143 1 -17 22 -32 145 -101 196 -112 300
		-174 303 -183 5 -10 89 -10 94 0 3 8 121 81 224 139 28 15 105 59 172 98 l122
		69 0 337 0 338 -27 13 c-16 8 -93 52 -173 98 -80 45 -161 92 -180 102 -19 11
		-71 41 -115 67 -44 26 -145 85 -225 131 -80 46 -178 103 -218 127 -40 23 -75
		43 -78 43 -2 0 -22 11 -44 25 -22 14 -49 25 -60 25 -20 0 -20 -6 -20 -278z" />
				<path d="M560 1362 c-25 -16 -72 -44 -105 -62 -33 -18 -76 -43 -95 -55 -19
		-12 -57 -34 -85 -49 -27 -16 -74 -42 -102 -59 l-53 -32 0 -325 c0 -299 1 -326
		18 -336 26 -17 347 -202 435 -251 42 -24 77 -48 77 -54 0 -5 23 -9 50 -9 28 0
		50 4 50 10 0 5 33 28 73 51 39 23 113 65 162 94 50 29 106 62 126 73 37 21
		202 116 429 247 74 43 168 97 208 119 44 25 71 47 70 55 -3 14 -68 57 -183
		121 -33 18 -76 43 -95 55 -81 51 -200 115 -213 115 -8 0 -52 -22 -98 -48 -144
		-83 -423 -244 -454 -263 -75 -45 -109 -60 -121 -55 -11 4 -14 70 -16 343 -3
		380 1 364 -78 315z" />
        </g>
      </svg>
    `;

		return new Response(svgTemplate, {
			headers: {
				'Content-Type': 'image/svg+xml',
				'Access-Control-Allow-Origin': '*',
				'Cache-Control': 'public, s-maxage=31536000' // 1 year cache
			}
		});
	} catch (error) {
		return new Response(JSON.stringify({ message: 'Failed to generate SVG', error }), {
			status: 500
		});
	}
};
